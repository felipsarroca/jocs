:root {
  /* Light and vivid palette */
  --bg1: #fff8e7; /* warm */
  --bg2: #f7ecff; /* soft lilac */
  --bg3: #e6f7ff; /* soft cyan */
  --panel: rgba(255, 255, 255, 0.85);
  --border: rgba(0, 0, 0, 0.08);
  --ink: #0e1740;
  --white: #ffffff;
  --muted: #586387;
  --primary: #7c4dff;
  --accent: #00bcd4;
  --ok: #00c853;
  --warn: #ff8f00;
  --bad: #e53935;
  --chip: rgba(0,0,0,0.06);
}

* { box-sizing: border-box; }
html, body { height: 100%; }
body {
  margin: 0;
  font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, Arial, "Apple Color Emoji", "Segoe UI Emoji";
  color: var(--ink);
  background: radial-gradient(900px 700px at 12% 8%, #fff2b3 0%, transparent 55%),
              radial-gradient(900px 700px at 88% 18%, #c6f4ff 0%, transparent 50%),
              linear-gradient(160deg, var(--bg1), var(--bg2), var(--bg3));
}

.app { max-width: 1100px; margin: 0 auto; padding: 24px; }

.header { text-align: center; margin: 8px 0 18px; }
.header h1 { margin: 0; font-weight: 800; letter-spacing: 0.3px; }
.subtitle { margin: 6px 0 0; color: var(--muted); }

.panel {
  background: var(--panel);
  border: 1px solid var(--border);
  border-radius: 14px;
  backdrop-filter: blur(8px);
  padding: 18px;
  box-shadow: 0 12px 28px rgba(0,0,0,0.12);
}

.panel + .panel { margin-top: 16px; }
.hidden { display: none; }

.field label { display: block; font-weight: 600; margin-bottom: 8px; }
.secret-wrap { display: flex; gap: 8px; align-items: center; }
.secret-wrap input {
  flex: 1;
  background: rgba(255,255,255,0.9);
  border: 1px solid var(--border);
  color: var(--ink);
  padding: 12px 14px;
  border-radius: 10px;
  outline: none;
}
.secret-wrap input:focus { border-color: var(--accent); box-shadow: 0 0 0 3px rgba(0,188,212,0.25); }
.hint { color: var(--muted); }

.actions { margin-top: 12px; display: flex; gap: 10px; }
@media (max-width: 520px) { .actions { flex-wrap: wrap; } }

.btn {
  border: none;
  color: var(--ink);
  background: rgba(0,0,0,0.06);
  border: 1px solid var(--border);
  padding: 10px 14px;
  border-radius: 10px;
  cursor: pointer;
  transition: transform 0.08s ease, background 0.2s ease, box-shadow 0.2s ease;
}
.btn:hover { transform: translateY(-1px); background: rgba(0,0,0,0.08); }
.btn:active { transform: translateY(0); }
.btn.primary { background: linear-gradient(135deg, #7c4dff, #00bcd4); border: none; color: #fff; }
.btn.accent { background: linear-gradient(135deg, #00bcd4, #00c853); border: none; color: #fff; }
.btn.ghost { background: transparent; }
.btn.small { padding: 6px 10px; font-size: 14px; }
.btn.icon { width: 44px; }
.btn.big { padding: 12px 18px; font-size: 18px; }
.btn:disabled { opacity: 0.6; cursor: not-allowed; }

.top-bar { display: flex; align-items: center; gap: 12px; margin-bottom: 10px; }
.status { font-weight: 700; color: var(--accent); }

.game-grid { display: grid; grid-template-columns: 380px 1fr; gap: 18px; align-items: start; }
@media (max-width: 880px) { .game-grid { grid-template-columns: 1fr; } }

.canvas-wrap { background: rgba(255,255,255,0.9); border: 1px solid var(--border); border-radius: 12px; padding: 10px; }

.play-wrap { display: grid; gap: 16px; }

.word-slots { display: flex; flex-wrap: wrap; gap: 10px; min-height: 66px; }
.slot {
  width: 42px; height: 56px;
  background: rgba(255,255,255,0.95);
  border: 1px solid var(--border);
  border-radius: 10px;
  display: grid; place-items: center;
  font-size: 26px; font-weight: 800; letter-spacing: 1px;
  position: relative;
}
@media (max-width: 480px) {
  .word-slots { gap: 8px; min-height: 56px; }
  .slot { width: 32px; height: 46px; font-size: 20px; }
  .slot::after { bottom: 6px; left: 6px; right: 6px; height: 2px; }
}
.slot::after {
  content: ""; position: absolute; bottom: 8px; left: 8px; right: 8px; height: 3px;
  background: linear-gradient(90deg, #7c4dff, #00e5ff);
  border-radius: 2px; opacity: 0.9;
}
.slot.space { width: 20px; background: transparent; border: none; }
.slot.space::after { display: none; }
.slot.revealed { animation: pop 260ms cubic-bezier(.2,1.2,.2,1); color: var(--ok); }
@keyframes pop { from { transform: scale(.8); opacity: .2; } to { transform: scale(1); opacity: 1; } }

.guess-row { display: flex; gap: 10px; align-items: center; }
.letter-input {
  width: 64px; text-align: center; font-size: 28px; font-weight: 800;
  background: rgba(255,255,255,0.95);
  border: 1px solid var(--border);
  color: var(--ink); padding: 10px; border-radius: 10px;
}
@media (max-width: 480px) {
  .letter-input { width: 54px; font-size: 24px; padding: 8px; }
}

.keyboard { display: grid; grid-template-columns: repeat(14, 1fr); gap: 6px; }
@media (max-width: 600px) { .keyboard { grid-template-columns: repeat(10, 1fr); } }
@media (max-width: 400px) { .keyboard { grid-template-columns: repeat(8, 1fr); gap: 5px; } }
.key {
  padding: 10px 0; text-align: center; border-radius: 8px; cursor: pointer;
  background: rgba(255,255,255,0.95); border: 1px solid var(--border);
  font-weight: 700; user-select: none;
}
.key:hover { background: rgba(0,0,0,0.06); }
.key.used { opacity: 0.45; cursor: default; }
.key.good { background: linear-gradient(135deg, rgba(0,230,118,0.35), rgba(0,229,255,0.25)); }
.key.bad { background: linear-gradient(135deg, rgba(255,82,82,0.35), rgba(255,234,0,0.25)); }

.wrong-box { background: rgba(255,255,255,0.9); border: 1px solid var(--border); border-radius: 12px; padding: 10px; }
.wrong-title { color: var(--warn); font-weight: 700; margin-bottom: 6px; }
.wrong-letters { display: flex; flex-wrap: wrap; gap: 6px; min-height: 28px; }
.chip {
  padding: 6px 10px; border-radius: 999px; background: var(--chip);
  border: 1px solid var(--border); font-weight: 700; color: var(--ink);
}

.footer { text-align: center; color: var(--muted); margin-top: 16px; font-size: 14px; }
.footer .credit { margin-bottom: 4px; color: var(--ink); font-size: 12px; font-weight: 400; }
.footer .license { font-size: 12px; line-height: 1.3; }
.footer .license a { color: inherit; text-decoration: underline; }
.license-badge { height: 24px; width: auto; vertical-align: middle; margin-right: 6px; }
.license-badge-link { display: inline-block; }

.sr-only { position: absolute; width: 1px; height: 1px; padding: 0; margin: -1px; overflow: hidden; clip: rect(0, 0, 1px, 1px); border: 0; }

/* Canvas helper styles */
canvas { width: 100%; height: auto; display: block; }

/* Overlays */
.overlay {
  position: fixed; inset: 0; display: grid; place-items: center; padding: 24px;
  background: rgba(255,255,255,0.6);
  backdrop-filter: blur(6px);
  z-index: 50;
}
.overlay.hidden { display: none; }
.overlay-card {
  width: min(680px, 100%);
  background: var(--panel);
  border: 1px solid var(--border);
  border-radius: 14px;
  padding: 20px;
  box-shadow: 0 16px 40px rgba(0,0,0,0.18);
  text-align: center;
  position: relative;
  max-height: 90vh;
  overflow: auto;
}
.overlay-card h2 { margin: 4px 0 6px; font-size: 32px; }
.overlay-card p { margin: 8px 0 16px; color: var(--muted); }
.overlay-card.win { background: linear-gradient(180deg, rgba(255,255,255,0.95), rgba(255,255,255,0.85)); }
.overlay-card.lose { background: linear-gradient(180deg, rgba(255,255,255,0.95), rgba(255,255,255,0.85)); }
.word-highlight { font-weight: 800; color: var(--primary); }
.confetti { position: absolute; inset: 0; pointer-events: none; overflow: hidden; z-index: 0; }
.overlay-card > * { position: relative; z-index: 1; }
@media (max-width: 480px) {
  .overlay { padding: 12px; }
  .overlay-card h2 { font-size: 26px; }
  .btn.big { font-size: 16px; padding: 10px 14px; }
}
.confetti .piece {
  position: absolute; width: 10px; height: 14px; opacity: 0.9; border-radius: 2px;
  animation: fall linear forwards;
}
@keyframes fall {
  0% { transform: translateY(-120%) rotate(0deg); }
  100% { transform: translateY(120vh) rotate(720deg); }
}

/* Final screen adjustments: make drawing smaller to avoid scroll */
.overlay-card.lose canvas#loseCanvas {
  /* Reduce canvas size inside final (lose) overlay for better fit */
  width: min(80vw, 280px);
  height: auto;
  margin: 8px auto 16px;
  display: block;
}

@media (max-height: 640px) {
  .overlay-card.lose canvas#loseCanvas { width: min(70vw, 240px); }
}
